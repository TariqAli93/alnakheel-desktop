import { createRouter, createWebHistory } from 'vue-router'

import AddProperty from '../pages/AddProperty.vue'
import PropertyList from '../pages/PropertyList.vue'
import HomePage from '../pages/HomePage.vue'
import UpdateProperty from '../pages/updateProperty.vue'
import PropertyDetails from '../pages/PropertyDetails.vue'
import Login from '../pages/Login.vue'
import Users from '../pages/Users.vue'
import { useLoginState } from '../stores/login'

const routes = [
  {
    path: '/add-property',
    name: 'AddProperty',
    component: AddProperty,
    meta: { requiresAuth: true, title: 'ุฅุถุงูุฉ ุนูุงุฑ' }
  },
  {
    path: '/properties',
    name: 'PropertyList',
    component: PropertyList,
    meta: { requiresAuth: true, title: 'ูุงุฆูุฉ ุงูุนูุงุฑุงุช' }
  },
  {
    path: '/update-property/:id',
    name: 'UpdateProperty',
    component: UpdateProperty,
    meta: { requiresAuth: true, title: 'ุชุนุฏูู ุนูุงุฑ' }
  },
  {
    path: '/',
    name: 'Home',
    component: HomePage,
    meta: { requiresAuth: true, title: 'ุงูุตูุญุฉ ุงูุฑุฆูุณูุฉ' }
  },
  {
    path: '/property-details/:id',
    name: 'PropertyDetails',
    component: PropertyDetails,
    meta: { title: 'ุชูุงุตูู ุงูุนูุงุฑ' }
  },
  {
    path: '/login',
    name: 'Login',
    component: Login,
    meta: { title: 'ุชุณุฌูู ุงูุฏุฎูู' }
  },
  {
    path: '/users',
    name: 'Users',
    component: Users,
    meta: { requiresAuth: true, title: 'ุงููุณุชุฎุฏููู' }
  },
  {
    path: '/messages',
    name: 'Messages',
    component: () => import('../pages/webMessages.vue'),
    meta: { requiresAuth: true, title: 'ุงูุฑุณุงุฆู' }
  },
  {
    path: '/contracts',
    name: 'Contracts',
    component: () => import('../pages/Contract.vue'),
    meta: { requiresAuth: true, title: 'ุงูุนููุฏ' }
  },
  {
    path: '/print-contract',
    name: 'PrintContract',
    component: () => import('../components/PrintContract.vue'),
    meta: { requiresAuth: true, title: 'ุทุจุงุนุฉ ุงูุนูุฏ' }
  },
  {
    path: '/:pathMatch(.*)*',
    redirect: '/'
  }
]

const router = createRouter({
  history: createWebHistory(),
  routes
})

// ุญุงุฑุณ ุงููุณุงุฑ ุงููุญุณู
router.beforeEach((to, from, next) => {
  const loginStore = useLoginState()

  // ุชุนููู ุนููุงู ุงูุตูุญุฉ
  if (to.meta.title) {
    document.title = `ูุธุงู ุฅุฏุงุฑุฉ ุงูุนูุงุฑุงุช - ${to.meta.title}`
  } else {
    document.title = 'ูุธุงู ุฅุฏุงุฑุฉ ุงูุนูุงุฑุงุช'
  }

  // ุงูุชุญูู ูู ุงููุณุงุฑุงุช ุงูุชู ุชุญุชุงุฌ ุชุตุฑูุญ
  if (to.meta.requiresAuth) {
    // ุงูุชุญูู ูู ุชุณุฌูู ุงูุฏุฎูู ูุตุญุฉ ุงูู token
    if (!loginStore.isLoggedIn || !loginStore.checkTokenValidity()) {
      console.log('๐ ุฅุนุงุฏุฉ ุชูุฌูู ุฅูู ุตูุญุฉ ุชุณุฌูู ุงูุฏุฎูู')
      next({
        name: 'Login',
        query: { redirect: to.fullPath } // ุญูุธ ุงููุณุงุฑ ููุนูุฏุฉ ุฅููู ุจุนุฏ ุชุณุฌูู ุงูุฏุฎูู
      })
      return
    }
  }

  // ุฅุฐุง ูุงู ุงููุณุชุฎุฏู ูุณุฌู ุฏุฎููู ููุญุงูู ุงููุตูู ูุตูุญุฉ ุชุณุฌูู ุงูุฏุฎูู
  if (to.name === 'Login' && loginStore.isLoggedIn && loginStore.checkTokenValidity()) {
    // ุฅุนุงุฏุฉ ุชูุฌูู ุฅูู ุงูุตูุญุฉ ุงููุทููุจุฉ ุฃู ุงูุตูุญุฉ ุงูุฑุฆูุณูุฉ
    const redirectPath = to.query.redirect || '/'
    next(redirectPath)
    return
  }

  next()
})

export default router
